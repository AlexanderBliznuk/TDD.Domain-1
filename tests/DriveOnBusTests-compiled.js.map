{"version":3,"sources":["DriveOnBusTests.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAEA,SAAS,QAAT,CAAkB,GAAlB,EAAuB,CAEtB;;AAED,SAAS,GAAT,CAAa,MAAb,EAAqB;AACjB,WAAO,MAAP;AACH;;AAED,MAAM,qBAAN,EAA6B,YAAW;AACpC,QAAI,YAAY,EAAhB;AACA,UAAM,YAAW;AACb;AACH,KAFD;;AAIA,UAAM,4BAAN,EAAoC,YAAW;AAC3C,aAAK,cAAL,EAAqB,YAAW;AAC5B;AACA,0BAAI,SAAJ,EAAe,IAAI,EAAJ,CAAf;;AAEA,gBAAI,gBAAgB,qBAApB;;AAEA,6BAAO,KAAP,CAAa,IAAb,EAAmB,aAAnB;AACH,SAPD;;AASA,aAAK,qCAAL,EAA4C,YAAW;AACnD,gBAAI,QAAQ,EAAC,KAAK,OAAN,EAAZ;AACA,4BAAM,KAAN;AACA,0BAAI,KAAJ,EAAW,IAAI,EAAJ,CAAX;;AAEA,gBAAI,gBAAgB,oBAAU,KAAV,CAApB;;AAEA,6BAAO,KAAP,CAAa,IAAb,EAAmB,aAAnB;AACH,SARD;AASH,KAnBD;;AAqBA,UAAM,6BAAN,EAAqC,YAAW;AAC5C,aAAK,mBAAL,EAA0B,YAAW;AACjC;AACA;;AAEA,gBAAI,gBAAgB,qBAApB;;AAEA,6BAAO,KAAP,CAAa,KAAb,EAAoB,aAApB;AACH,SAPD;;AASA,aAAK,4DAAL,EAAmE,YAAW;AAC1E,gBAAI,MAAM,EAAV;AACA,4BAAM,GAAN;AACA,0BAAI,GAAJ,EAAS,IAAI,EAAJ,CAAT;;AAEA,gBAAI,gBAAgB,oBAAU,GAAV,CAApB;;AAEA,6BAAO,KAAP,CAAa,KAAb,EAAoB,aAApB;AACH,SARD;;AAUA,aAAK,0DAAL,EAAiE,YAAW;AACxE,gBAAI,QAAQ,EAAC,KAAK,OAAN,EAAZ;AACA,4BAAM,KAAN;AACA,0BAAI,KAAJ,EAAW,IAAI,CAAJ,CAAX;;AAEA,gBAAI,gBAAgB,oBAAU,KAAV,CAApB;;AAEA,6BAAO,KAAP,CAAa,KAAb,EAAoB,aAApB;AACH,SARD;AASH,KA7BD;;AA+BA,UAAM,gBAAN,EAAwB,YAAW;AAC/B,aAAK,+CAAL,EAAsD,YAAW;AAC7D,0BAAI,SAAJ;;AAEA,gBAAI,oBAAoB,iBAAxB;;AAEA,6BAAO,KAAP,CAAa,SAAb,EAAwB,iBAAxB;AACH,SAND;AAOH,KARD;AASH,CAnED","file":"DriveOnBusTests-compiled.js","sourcesContent":["import assert from 'assert';\nimport { pay, drive, enter, openDoors, clean } from '../src/bus';\n\nfunction doNotPay(bus) {\n\n}\n\nfunction rub(volume) {\n    return volume;\n}\n\nsuite('When I drive on bus', function() {\n    let passenger = {};\n    setup(function() {\n        clean();\n    });\n\n    suite(\"Doors will be opened to me\", function() {\n        test('When I payed', function() {\n            enter();\n            pay(passenger, rub(20));\n\n            let isDoorsOpened = openDoors();\n\n            assert.equal(true, isDoorsOpened);\n        });\n\n        test('If I payed 10 rub and I am an adult', function() {\n            let adult = {age: \"adult\"};\n            enter(adult);\n            pay(adult, rub(10));\n\n            let isDoorsOpened = openDoors(adult);\n\n            assert.equal(true, isDoorsOpened);\n        });\n    });\n    \n    suite(\"Doors WON'T be opened to me\", function() {\n        test(\"When I didn't pay\", function() {\n            enter();\n            doNotPay();\n\n            let isDoorsOpened = openDoors();\n\n            assert.equal(false, isDoorsOpened);\n        });\n\n        test('I payed only 10 rub (not full price) and I am not an adult', function() {\n            let man = {};\n            enter(man);\n            pay(man, rub(10));\n\n            let isDoorsOpened = openDoors(man);\n\n            assert.equal(false, isDoorsOpened);\n        });\n\n        test('If I payed just 5 rub (not full price) and I am an adult', function() {\n            let adult = {age: \"adult\"};\n            enter(adult);\n            pay(adult, rub(5));\n\n            let isDoorsOpened = openDoors(adult);\n\n            assert.equal(false, isDoorsOpened);\n        });\n    });\n    \n    suite('And pay for it', function() {\n        test('At the end of trip I left bus on Theater stop', function() {\n            pay(passenger);\n\n            let stopWhereILeftBus = drive();\n\n            assert.equal(\"Theater\", stopWhereILeftBus);\n        });\n    });\n});"]}